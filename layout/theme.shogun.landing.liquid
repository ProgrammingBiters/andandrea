{% comment %}
Auto-generated by Shogun.
This file can be re-written at any time.
{% endcomment %}

<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">

<head>
  
  {% render 'head-tag' %}
  {%- assign base_font = settings.type_base_font -%}
  {%- assign base_font_medium = base_font | font_modify: 'weight', '500' -%}
  {%- assign base_font_semibold = base_font | font_modify: 'weight', '600' -%}
  {%- if base_font_medium -%}<link rel="preload" as="font" href="{{ base_font_medium | font_url }}" type="font/woff2" crossorigin>{%- endif -%}
  {%- if base_font_semibold -%}<link rel="preload" as="font" href="{{ base_font_semibold | font_url }}" type="font/woff2" crossorigin>{%- endif -%}

  <title>{{ page_title }}{% if current_tags %}{% assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags }}{% endif %}{% if current_page != 1 %} &ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif %}{% unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless %}</title>
  {% render 'social-meta-tags' %}
  {% style %}:root {--viewport-height: 100vh;--viewport-height-first-section: 100vh;--nav-height: 0;}{% endstyle %}

  {{ 'styles.css' | asset_url | stylesheet_tag }}
  {{ 'cart-poup.css' | asset_url | stylesheet_tag }}

  {% render 'andAndrea' %}{% comment %}{{ content_for_header }}{% endcomment %}
  {% comment %}EasylockdownHeadBegin{% endcomment %}
  {% capture elhRender %}{% render 'easylockdown_head', easylockdownRender: true, easylockdownCustomPriceSelector: easylockdownCustomPriceSelector %}{% endcapture %}
  {% assign elhRender = elhRender | split: '--elhResults--'%}{{ elhRender[0] }}
  {% comment %}EasylockdownHeadEnd{% endcomment %}
  {% if template.name == 'product' %}{% include 'kiwiSizing' %}{% endif %}

  <script>
    document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
    window.theme = window.theme || {};
    {% if settings.currency_code_enabled %}
    theme.money_format_with_code_preference = {{ shop.money_with_currency_format | json }};
    {% else %}
    theme.money_format_with_code_preference = {{ shop.money_format | json }};
    {% endif %}
    theme.money_format = {{ shop.money_format | json }};
    theme.money_container = '.theme-money';
    theme.strings = {
      previous: {{ 'general.accessibility_labels.previous' | t | json }},
      next: {{ 'general.accessibility_labels.next' | t | json }},
      close: {{ 'general.accessibility_labels.close' | t | json }},
      addressError: {{ 'map.errors.address_error' | t | json }},
      addressNoResults: {{ 'map.errors.address_no_results' | t | json }},
      addressQueryLimit: {{ 'map.errors.address_query_limit_html' | t | json }},
      authError: {{ 'map.errors.auth_error' | t | json }},
      back: {{ 'layout.navigation.back' | t | json }},
      cartConfirmation: {{ 'cart.terms.confirmation' | t | json }},
      loadMore: {{ 'general.accessibility_labels.load_more' | t | json }},
      infiniteScrollNoMore: {{ 'collections.general.infinite_scroll_no_more' | t | json }},
      priceNonExistent: {{ 'products.variant.non_existent' | t | json }},
      buttonDefault: {{ 'products.product.add_to_cart' | t | json }},
      buttonPreorder: {{ 'products.product.preorder' | t | json }},
      buttonNoStock: {{ 'products.variant.out_of_stock' | t | json }},
      buttonNoVariant: {{ 'products.variant.non_existent' | t | json }},
      variantNoStock: {{ 'products.variant.no_stock' | t | json }},
      unitPriceSeparator: {{ 'products.product.unit_price_separator' | t | json }},
      colorBoxPrevious: {{ 'general.lightbox.previous' | t | json }},
      colorBoxNext: {{ 'general.lightbox.next' | t | json }},
      colorBoxClose: {{ 'general.lightbox.close' | t | json }},
      navigateHome: {{ 'layout.navigation.home' | t | json }},
      productAddingToCart: {{ 'products.product.adding_to_cart' | t | json }},
      productAddedToCart: {{ 'products.product.added_to_cart' | t | json }},
      popupWasAdded: {{ 'products.product.popup_was_added' | t | json }},
      popupCheckout: {{ 'products.product.popup_checkout' | t | json }},
      popupContinueShopping: {{ 'products.product.popup_continue_shopping' | t | json }},
      onlyXLeft: {{ 'products.labels.only_x_left' | t: quantity: '[[ quantity ]]' | json }},
      priceSoldOut: {{ 'products.labels.sold_out' | t | json }},
      inventoryLowStock: {{ 'products.labels.low_stock' | t | json }},
      inventoryInStock: {{ 'products.labels.in_stock' | t | json }},
      loading: {{ 'products.listing.loading' | t | json }},
      viewCart: {{ 'layout.cart_summary.cart' | t | json }},
      page: {{ 'general.meta.page' | t | json }},
      imageSlider: {{ 'general.slider.images' | t | json }},
      clearAll: {{ 'collections.filtering.clear_all' | t | json }}
    };
    theme.routes = {
      root_url: '{{ routes.root_url }}',
      cart_url: '{{ routes.cart_url }}',
      cart_add_url: '{{ routes.cart_add_url }}',
      checkout: '/checkout'
    };
    theme.settings = {
      animationEnabledDesktop: {{ settings.animation_enabled_desktop | json }},
      animationEnabledMobile: {{ settings.animation_enabled_mobile | json }}
    };
    theme.checkViewportFillers = function(){
      var toggleState = false;
      var elPageContent = document.getElementById('page-content');
      if(elPageContent) {
      var elOverlapSection = elPageContent.querySelector('.header-overlap-section');
      if (elOverlapSection) {
      var padding = parseInt(getComputedStyle(elPageContent).getPropertyValue('padding-top'));
          toggleState = ((Math.round(elOverlapSection.offsetTop) - padding) === 0);
      }
      }
      if(toggleState) {
        document.getElementsByTagName('body')[0].classList.add('header-section-overlap');
      } else {
        document.getElementsByTagName('body')[0].classList.remove('header-section-overlap');
      }
    };
    theme.assessAltLogo = function(){
      var elsOverlappers = document.querySelectorAll('.needs-alt-logo');
      var useAltLogo = false;
      if(elsOverlappers.length) {
      var elSiteControl = document.querySelector('#site-control');
      var elSiteControlInner = document.querySelector('#site-control .site-control__inner');
      var headerMid = elSiteControlInner.offsetTop + elSiteControl.offsetTop + elSiteControlInner.offsetHeight / 2;
          Array.prototype.forEach.call(elsOverlappers, function(el, i){
      var thisTop = el.getBoundingClientRect().top;
      var thisBottom = thisTop + el.offsetHeight;
      if(headerMid > thisTop && headerMid < thisBottom) {
          useAltLogo = true;
      return false;
      }
      });
      }
      if(useAltLogo) {
        document.getElementsByTagName('body')[0].classList.add('use-alt-logo');
      } else {
        document.getElementsByTagName('body')[0].classList.remove('use-alt-logo');
      }
    };
  </script>

  <script src="{{ 'jquery.js' | asset_url }}"></script>
  {% render 'fonts' %}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Swiper/8.2.6/swiper-bundle.css" integrity="sha512-LTz09eiSkjtMayQgsyCcxuA2POUuvwdJoejrNLLIj5tulySAEAFgRHXW5JO4/qW36nurH8iApZ4SMj9E2rRHtQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  {% render 'shogun-head' %}

</head>


<body class="page-{{ page_title | handle }} {% if customer %}customer-logged-in {% endif %}template-{{ template | replace: '.', ' ' | truncatewords: 1, '' | handle }}{% if template.suffix != blank %} template-suffix-{{ template.suffix }}{% endif %}{% if template contains 'customers' %} template-customer-area{% endif %}{% if logo_html contains 'img' %} has-logo{% endif %} animation-speed-{{ settings.animation_speed }}" {% if settings.animation_speed == "fast" %}data-cc-animate-timeout="0"{% endif %}>
  
  
  {{ content_for_layout }}
  
  <script>
    if(window.innerWidth < 768 && window.localStorage.getItem('is_first_visit') !== null) {
    var pageFadedIn = false;
    document.body.style.opacity = 0;
    function fadeInPageMob(){
    if(!pageFadedIn) {
    document.body.classList.add("cc-animate-enabled");
    document.body.style.transition = 'opacity 0.{% if settings.animation_speed == "fast" %}2{% else %}4{% endif %}s';
    setTimeout(function () {
    document.body.style.opacity = 1;
    }, {% if settings.animation_speed == "fast" %}50{% else %}200{% endif %});
    pageFadedIn = true;
    }
    }
    window.addEventListener("load", fadeInPageMob);
    setTimeout(fadeInPageMob, 3000);
    }
    window.addEventListener("pageshow", function(){
    document.getElementById('cc-veil').classList.remove('-in');
    });
  </script>
<script>
    if ('IntersectionObserver' in window) {
    document.body.classList.add("cc-animate-enabled");
    }
    window.addEventListener("pageshow", function(){
    document.getElementById('cc-veil').classList.remove('-in');
    });
  </script>
<script>
    var firstSection = document.body.querySelector('#page-content .shopify-section:first-child');
    if(firstSection) {
    var firstBgSet = firstSection.querySelector('[data-bgset]');
    if (firstBgSet) {
    var bgSets = firstBgSet.dataset.bgset.split(',');
    if(bgSets) {
    for (var i = 0; i < bgSets.length; i++) {
    var widthMatch = bgSets[i].match(/ [0-9]+w/g);
    var heightMatch = bgSets[i].match(/ [0-9]+h/g);
    if(widthMatch && heightMatch) {
    var width = parseInt(widthMatch[0].replace('w', '').trim());
    var height = parseInt(heightMatch[0].replace('h', '').trim());
    if (width >= window.innerWidth && height >= window.innerHeight) {
    firstBgSet.style.backgroundImage = "url('" + bgSets[i].trim().split(' ')[0] + "')";
    firstBgSet.classList.remove('fade-in');
    break;
    }}}}
    } else if (firstSection.querySelector('[data-src]')) {
    var firstDataSrc = firstSection.querySelector('[data-src]');
    var widths = JSON.parse(firstDataSrc.dataset.widths);
    for (var i = 0; i < widths.length; i++) {
    var width = parseInt(widths[i]);
    if (width >= window.innerWidth) {
    firstDataSrc.setAttribute('src', firstDataSrc.dataset.src.replace('{width}', width));
    firstDataSrc.classList.remove('fade-in');
    break;
    }}}}
  </script>
<script>
    //Eliminate a bit of CLS
    document.documentElement.style.setProperty('--nav-height',
    document.getElementById('site-control').clientHeight + "px");
    //Calculate the viewport height
    theme.calc100vh = function() {
    var nav = document.getElementById('site-control');
    document.documentElement.style.setProperty('--viewport-height-first-section',
    `${(nav.dataset.opacity === 'opaque') ? window.innerHeight - nav.clientHeight : window.innerHeight}px`);
    document.documentElement.style.setProperty('--viewport-height',
    (nav.dataset.opacity.indexOf('opaque') > -1 && nav.dataset.positioning === "sticky") ? `calc(100vh - ${nav.clientHeight}px)` : "100vh");
    }
    theme.calc100vh();
  </script>
<script src="https://a.klaviyo.com/media/js/onsite/onsite.js"></script>
<script>
    var klaviyo = klaviyo || [];
    klaviyo.init({
      account: "PJnzTc",
     // list: 'XEK9YX',
      platform: "shopify",
      collection_urls: ["/collections/"]
      //collection_urls: ["/collections/","/"] 
    });
    klaviyo.enable("backinstock",{ 
    trigger: {
      product_page_text: "Notify Me When Available",
      product_page_class: "button button--full-width button--primary", // changed
      product_page_text_align: "center",
      product_page_margin: "0px",
      alternate_anchor: 'dawn-AddToCart', // new
      replace_anchor: false,
      collection_page_class: 'collection_message', 
      collection_page_text_align: 'center',
      collection_page_text: 'EMAIL WHEN AVAILABLE',    
      collection_page_padding: 'inherit', 
      collection_page_width: '200px'
    },
    modal: {
     headline: "{product_name}",
     body_content: "Register to receive a notification when this item comes back in stock.",
     email_field_label: "Email",
     button_label: "Notify me when available",
     subscription_success_label: "You're in! We'll let you know when it's back.",
     footer_content: '',
     additional_styles: "@import url('https://fonts.googleapis.com/css?family=Helvetica+Neue');",
     drop_background_color: "#000",
     background_color: "#fff",
     text_color: "#222",
     button_text_color: "#fff",
     button_background_color: "#439fdb",
     close_button_color: "#ccc",
     error_background_color: "#fcd6d7",
     error_text_color: "#C72E2F",
     success_background_color: "#d3efcd",
     success_text_color: "#1B9500"
    }
  });
  </script>
<script type="text/javascript" src="//www.klaviyo.com/media/js/public/klaviyo_subscribe.js"></script>
<script src="{{ 'vendor.min.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'theme.js' | asset_url }}" defer="defer"></script>
<script>
    document.addEventListener('DOMContentLoaded', function(){
      let popup = document.querySelector('#easylockdown-password-form'),
      t = document.createElement('template'),
      titlePopup = document.createElement('div'),
      popupLink = document.createElement('div'),
      regForm = {{ regForm | json}};
      t.innerHTML = regForm;
      titlePopup.classList.add('easyTitle');
      titlePopup.innerHTML = "<h3>POP UP COLLECTION</h3><span>aA-Lister access only</span>";
      popupLink.classList.add('popupLink')
      popupLink.innerHTML = "<span>While our PopUp Party is closed, you can shop our <a href='https://andandrea.com/collections/always-on'>Always Available Collection</a></span>"
      if(popup.style.display !== 'none'){
      popup.insertBefore(titlePopup, popup.firstChild);
      popup.append(t.content);
      document.body.classList.add('easyBg');
      popup.append(popupLink)
      } 
      })
  </script>
<script data-cfasync="false">window.ju_num="498084A7-4E3D-4F89-BD37-310A40C01882";window.asset_host='//cdn.jst.ai/';(function(i,s,o,g,r,a,m){i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)};a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script',asset_host+'vck.js','juapp');</script>
<script async type="text/javascript" src="https://static.klaviyo.com/onsite/js/klaviyo.js?company_id=PJnzTc"></script>
<script type="text/javascript">
    document.querySelector('.klaviyo_form_trigger-1').addEventListener('click', function (){
    window._klOnsite = window._klOnsite || []; 
    window._klOnsite.push(['openForm', 'YhT8Gf']);
    });
  </script>
<script>
    var cookiename = "timercounter";
    var starttimer742;
    var starttimer741;
    function setCookie(cname,cvalue,exdays) {
    var d = new Date();
    d.setTime(d.getTime() + (exdays*24*60*60*1000));
    var expires = "expires=" + d.toGMTString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }
    function getCookie(cname) {
    var name = cname + "=";
    var decodedCookie = decodeURIComponent(document.cookie);
    var ca = decodedCookie.split(';');
    for(var i = 0; i < ca.length; i++) {
    var c = ca[i];
    while (c.charAt(0) == ' ') {
    c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
    return c.substring(name.length, c.length);
    }}
    return "";
    }
    function delete_cookie(name) 
    {
    document.cookie = name +'=; Path=/; Expires='+new Date()+';';
    }
    function start74inital(){
    // Set the date or time we're counting down to 74 hrs
    var countDownDate74 = Date.parse(document.getElementById('timer_enable').dataset.startTime) + ((74)*60*60*1000);  
    starttimer742 = setInterval(function() 
    {
    var now = new Date().getTime();
    // Find the distance between now an the count down date
    var distance74 = countDownDate74 - now;
    setCookie(cookiename, distance74, 30);
    // Time calculations for days, hours, minutes and seconds
    var days74 = Math.floor(distance74 / (1000 * 60 * 60 * 74));
    var hours74 = Math.floor((distance74 % (1000 * 60 * 60 * 74)) / (1000 * 60 * 60));
    var minutes74 = Math.floor((distance74 % (1000 * 60 * 60)) / (1000 * 60));
    var seconds74 = Math.floor((distance74 % (1000 * 60)) / 1000);
    document.getElementById("countdown_timer").innerHTML = hours74 + "h : " + minutes74 + "m : " + seconds74 + "s ";
    if(distance74 <0)
    {
    document.getElementById("countdown_timer").innerHTML = "0h : 0m : 0s ";
    clearInterval(starttimer742);
    }
    }, 1000);
    }
    function start74fromcookie()
    {
    var countDownDate74c = (Date.parse(document.getElementById('timer_enable').dataset.startTime)+(72*60*60*1000));
    starttimer741 = setInterval(function() {  
    var now = Date.parse(new Date());
    var distance74c = countDownDate74c - now;
    setCookie(cookiename, distance74c, 30);
    // Update the count down every 1 second
    // Time calculations for days, hours, minutes and seconds from the saved distance
    // in the cookie
    var days74c = Math.floor(distance74c / (1000 * 60 * 60 * 72));
    var hours74c = Math.floor((distance74c % (1000 * 60 * 60 * 72)) / (1000 * 60 * 60));
    var minutes74c = Math.floor((distance74c % (1000 * 60 * 60)) / (1000 * 60));
    var seconds74c = Math.floor((distance74c % (1000 * 60)) / 1000);
    document.getElementById("countdown_timer").innerHTML = hours74c + "h : " + minutes74c + "m : " + seconds74c + "s ";
    if(distance74c < 0){
    document.getElementById("countdown_timer").innerHTML = " 0h :  0m : 0s ";
    clearInterval(starttimer741);
    }
    }, 1000);
    }
    document.addEventListener('DOMContentLoaded', function() 
    {
    var _isannounmentBar = $('#timer_enable').val();
    var starttimer1,starttimer2;
    if(_isannounmentBar == 'true') // if settings enabled 
    {
    $('.timer_announcementbar').show();
    var oldTime = Date.parse(document.getElementById('timer_enable').dataset.startTime);
    if(isNaN(oldTime) == false)
    {
    var countDownDate = new Date().getTime() + oldTime;
    starttimer1 = setInterval(function() {  
    var now = new Date().getTime();
    var distance = oldTime - now;
    setCookie(cookiename, distance, 30);
    // in the cookie
    var days = Math.floor(distance / (1000 * 60 * 60 * 24));
    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
    var seconds = Math.floor((distance % (1000 * 60)) / 1000);
    if (distance < 0) 
    {
    clearInterval(starttimer1);
    start74fromcookie();
    }else{
    document.getElementById("countdown_timer").innerHTML =  hours + "h : " + minutes + "m : " + seconds + "s ";
    }
    }, 1000);
    }
    else
    {
    // Set the date or time we're counting down to 72 hrs
    var countDownDate = Date.parse(document.getElementById('timer_enable').dataset.startTime) + ((24)*60*60*1000);
    starttimer2 = setInterval(function() 
    {
    var now = new Date().getTime();
    // Find the distance between now an the count down date
    var distance = countDownDate - now;
    setCookie(cookiename, distance, 30);
    // Time calculations for days, hours, minutes and seconds
    var days = Math.floor(distance / (1000 * 60 * 60 * 24));
    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
    var seconds = Math.floor((distance % (1000 * 60)) / 1000);
    document.getElementById("countdown_timer").innerHTML = hours + "h : " + minutes + "m : " + seconds + "s ";
    if (distance < 0) 
    {
    clearInterval(starttimer2);
    start74inital();
    }
    }, 1000);
    }
    }
    else
    {
    clearInterval(starttimer2);
    clearInterval(starttimer1);
    clearInterval(starttimer742);
    clearInterval(starttimer741)
    delete_cookie(cookiename);
    }
    })
    $(document).ready(function(){
    var uniqueLi = {};
    var uniqueli_footer = {};
    //filter repeated country names in currency selection.
    $('#mob_currency_drop').find('.currency-list').addClass('currency_mobile_drop');
    $('#country-list-footer li').each(function()
    {
    var thisVal_footer = $(this).text();
    if ( !(thisVal_footer in uniqueli_footer) ) {
    uniqueli_footer[thisVal_footer] = "";
    } else {
    $(this).remove();
    }
    })
    if($(window).width() < 768)
    {
    var uniqueli_mob = {};
    $('.currency_mobile_drop li').each(function(){
    var thisVal_mob = $(this).text();
    if ( !(thisVal_mob in uniqueli_mob) ) {
    uniqueli_mob[thisVal_mob] = "";
    } else {
    $(this).remove();
    }
    })
    }else{
    $('#country-list-header li').each(function(){
    var thisVal = $(this).text();
    if ( !(thisVal in uniqueLi) ) {
    uniqueLi[thisVal] = "";
    } else {
    $(this).remove();
    }
    })
    }

    /*  var cartContents = fetch(window.Shopify.routes.root + 'cart.js')
    .then(response => response.json())
    .then(data => { 
    console.log(data);
    return data });
    */

    //$('#cart_icon_header').click(function(e){
    $(document).on('click','#cart_icon_header',function(e){
    e.preventDefault();
    e.stopPropagation();
    console.log('cart open');
    if(!$('body').hasClass('template-cart'))
    {

    var cartContents = fetch(window.Shopify.routes.root + 'cart.js')
    .then(response => response.json())
    .then(data => { 

    if(data.items.length == 0)
    {
    $('#cart_popup_links').hide();
    $('.cart_emptymsg').show()
    $('.cart_bg').show();
    }

    if(data.items.length > 0){
    $('.cart_bg').show();
    $('.cart_popup_items').empty();
    $('.cart_emptymsg').hide()
    $('#cart_popup_links').show();

    data.items.forEach(function(item,index){
    var cart_img = '<img class="ajax-cart-item__image" src="' + item.image + '" >';
    var cart_title = '<p class="cart-product__content__title">' + item.title + '</p>';
    var cart_price = '<p class="cart-product__content__price">' + theme.Shopify.formatMoney(item.line_price, '{{ shop.money_with_currency_format }}') + '</p>';
    var cart_variant ='<p class="cart-product__content__meta">' + item.title + '</p>';
    var imgs = '<div class="cart-product__image">' + cart_img + '</div>';
    var productInfo = cart_title + cart_price + cart_variant;
    var parent_info ='<div class="cart-product__content">' + productInfo + '</div>';
    var cart_items ='<div class="cart-product">' + imgs + parent_info + '</div>';
    $('.cart_popup_items').append(cart_items);
    })
    return data
    }
    });
    }
    })
    $('.close').click(function(){
    $('.cart_bg').hide();
    })
    window.onclick = function(event) {
    if (event.target == $('#cart_item_bg')) {
    $('.cart_bg').hide();
    }
    }
    })
  </script>
<script type="text/javascript" src="//widget.trustpilot.com/bootstrap/v5/tp.widget.bootstrap.min.js" async></script>
  <style type="text/css">
    body, html {
      width: 100% !important;
      background: white !important;
    }
  </style>
  
</body>


  <script>
    var cookiename = "timercounter";
    var starttimer742;
    var starttimer741;
    function setCookie(cname,cvalue,exdays) {
    var d = new Date();
    d.setTime(d.getTime() + (exdays*24*60*60*1000));
    var expires = "expires=" + d.toGMTString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }
    function getCookie(cname) {
    var name = cname + "=";
    var decodedCookie = decodeURIComponent(document.cookie);
    var ca = decodedCookie.split(';');
    for(var i = 0; i < ca.length; i++) {
    var c = ca[i];
    while (c.charAt(0) == ' ') {
    c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
    return c.substring(name.length, c.length);
    }}
    return "";
    }
    function delete_cookie(name) 
    {
    document.cookie = name +'=; Path=/; Expires='+new Date()+';';
    }
    function start74inital(){
    // Set the date or time we're counting down to 74 hrs
    var countDownDate74 = Date.parse(document.getElementById('timer_enable').dataset.startTime) + ((74)*60*60*1000);  
    starttimer742 = setInterval(function() 
    {
    var now = new Date().getTime();
    // Find the distance between now an the count down date
    var distance74 = countDownDate74 - now;
    setCookie(cookiename, distance74, 30);
    // Time calculations for days, hours, minutes and seconds
    var days74 = Math.floor(distance74 / (1000 * 60 * 60 * 74));
    var hours74 = Math.floor((distance74 % (1000 * 60 * 60 * 74)) / (1000 * 60 * 60));
    var minutes74 = Math.floor((distance74 % (1000 * 60 * 60)) / (1000 * 60));
    var seconds74 = Math.floor((distance74 % (1000 * 60)) / 1000);
    document.getElementById("countdown_timer").innerHTML = hours74 + "h : " + minutes74 + "m : " + seconds74 + "s ";
    if(distance74 <0)
    {
    document.getElementById("countdown_timer").innerHTML = "0h : 0m : 0s ";
    clearInterval(starttimer742);
    }
    }, 1000);
    }
    function start74fromcookie()
    {
    var countDownDate74c = (Date.parse(document.getElementById('timer_enable').dataset.startTime)+(72*60*60*1000));
    starttimer741 = setInterval(function() {  
    var now = Date.parse(new Date());
    var distance74c = countDownDate74c - now;
    setCookie(cookiename, distance74c, 30);
    // Update the count down every 1 second
    // Time calculations for days, hours, minutes and seconds from the saved distance
    // in the cookie
    var days74c = Math.floor(distance74c / (1000 * 60 * 60 * 72));
    var hours74c = Math.floor((distance74c % (1000 * 60 * 60 * 72)) / (1000 * 60 * 60));
    var minutes74c = Math.floor((distance74c % (1000 * 60 * 60)) / (1000 * 60));
    var seconds74c = Math.floor((distance74c % (1000 * 60)) / 1000);
    document.getElementById("countdown_timer").innerHTML = hours74c + "h : " + minutes74c + "m : " + seconds74c + "s ";
    if(distance74c < 0){
    document.getElementById("countdown_timer").innerHTML = " 0h :  0m : 0s ";
    clearInterval(starttimer741);
    }
    }, 1000);
    }
    document.addEventListener('DOMContentLoaded', function() 
    {
    var _isannounmentBar = $('#timer_enable').val();
    var starttimer1,starttimer2;
    if(_isannounmentBar == 'true') // if settings enabled 
    {
    $('.timer_announcementbar').show();
    var oldTime = Date.parse(document.getElementById('timer_enable').dataset.startTime);
    if(isNaN(oldTime) == false)
    {
    var countDownDate = new Date().getTime() + oldTime;
    starttimer1 = setInterval(function() {  
    var now = new Date().getTime();
    var distance = oldTime - now;
    setCookie(cookiename, distance, 30);
    // in the cookie
    var days = Math.floor(distance / (1000 * 60 * 60 * 24));
    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
    var seconds = Math.floor((distance % (1000 * 60)) / 1000);
    if (distance < 0) 
    {
    clearInterval(starttimer1);
    start74fromcookie();
    }else{
    document.getElementById("countdown_timer").innerHTML =  hours + "h : " + minutes + "m : " + seconds + "s ";
    }
    }, 1000);
    }
    else
    {
    // Set the date or time we're counting down to 72 hrs
    var countDownDate = Date.parse(document.getElementById('timer_enable').dataset.startTime) + ((24)*60*60*1000);
    starttimer2 = setInterval(function() 
    {
    var now = new Date().getTime();
    // Find the distance between now an the count down date
    var distance = countDownDate - now;
    setCookie(cookiename, distance, 30);
    // Time calculations for days, hours, minutes and seconds
    var days = Math.floor(distance / (1000 * 60 * 60 * 24));
    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
    var seconds = Math.floor((distance % (1000 * 60)) / 1000);
    document.getElementById("countdown_timer").innerHTML = hours + "h : " + minutes + "m : " + seconds + "s ";
    if (distance < 0) 
    {
    clearInterval(starttimer2);
    start74inital();
    }
    }, 1000);
    }
    }
    else
    {
    clearInterval(starttimer2);
    clearInterval(starttimer1);
    clearInterval(starttimer742);
    clearInterval(starttimer741)
    delete_cookie(cookiename);
    }
    })
    $(document).ready(function(){
    var uniqueLi = {};
    var uniqueli_footer = {};
    //filter repeated country names in currency selection.
    $('#mob_currency_drop').find('.currency-list').addClass('currency_mobile_drop');
    $('#country-list-footer li').each(function()
    {
    var thisVal_footer = $(this).text();
    if ( !(thisVal_footer in uniqueli_footer) ) {
    uniqueli_footer[thisVal_footer] = "";
    } else {
    $(this).remove();
    }
    })
    if($(window).width() < 768)
    {
    var uniqueli_mob = {};
    $('.currency_mobile_drop li').each(function(){
    var thisVal_mob = $(this).text();
    if ( !(thisVal_mob in uniqueli_mob) ) {
    uniqueli_mob[thisVal_mob] = "";
    } else {
    $(this).remove();
    }
    })
    }else{
    $('#country-list-header li').each(function(){
    var thisVal = $(this).text();
    if ( !(thisVal in uniqueLi) ) {
    uniqueLi[thisVal] = "";
    } else {
    $(this).remove();
    }
    })
    }

    /*  var cartContents = fetch(window.Shopify.routes.root + 'cart.js')
    .then(response => response.json())
    .then(data => { 
    console.log(data);
    return data });
    */

    //$('#cart_icon_header').click(function(e){
    $(document).on('click','#cart_icon_header',function(e){
    e.preventDefault();
    e.stopPropagation();
    console.log('cart open');
    if(!$('body').hasClass('template-cart'))
    {

    var cartContents = fetch(window.Shopify.routes.root + 'cart.js')
    .then(response => response.json())
    .then(data => { 

    if(data.items.length == 0)
    {
    $('#cart_popup_links').hide();
    $('.cart_emptymsg').show()
    $('.cart_bg').show();
    }

    if(data.items.length > 0){
    $('.cart_bg').show();
    $('.cart_popup_items').empty();
    $('.cart_emptymsg').hide()
    $('#cart_popup_links').show();

    data.items.forEach(function(item,index){
    var cart_img = '<img class="ajax-cart-item__image" src="' + item.image + '" >';
    var cart_title = '<p class="cart-product__content__title">' + item.title + '</p>';
    var cart_price = '<p class="cart-product__content__price">' + theme.Shopify.formatMoney(item.line_price, '{{ shop.money_with_currency_format }}') + '</p>';
    var cart_variant ='<p class="cart-product__content__meta">' + item.title + '</p>';
    var imgs = '<div class="cart-product__image">' + cart_img + '</div>';
    var productInfo = cart_title + cart_price + cart_variant;
    var parent_info ='<div class="cart-product__content">' + productInfo + '</div>';
    var cart_items ='<div class="cart-product">' + imgs + parent_info + '</div>';
    $('.cart_popup_items').append(cart_items);
    })
    return data
    }
    });
    }
    })
    $('.close').click(function(){
    $('.cart_bg').hide();
    })
    window.onclick = function(event) {
    if (event.target == $('#cart_item_bg')) {
    $('.cart_bg').hide();
    }
    }
    })
  </script>

  <!-- TrustBox script -->
  <script type="text/javascript" src="//widget.trustpilot.com/bootstrap/v5/tp.widget.bootstrap.min.js" async></script>
  <!-- End TrustBox script -->
</html>
